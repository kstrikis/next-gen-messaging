name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: node:22-bullseye

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: chatgenius_test
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/chatgenius_test?schema=public
      NODE_ENV: test
      PORT: 3001
      LOG_LEVEL: debug
      RATE_LIMIT_WINDOW_MS: 0
      RATE_LIMIT_MAX_REQUESTS: 0
      NEXT_PUBLIC_API_URL: http://127.0.0.1:3001
      NEXT_PUBLIC_SOCKET_URL: http://127.0.0.1:3001

    steps:
      - uses: actions/checkout@v4

      - name: Copy environment files
        run: |
          cp client/.env.example client/.env
          cp server/.env.example server/.env

      - name: Install dependencies
        run: npm run install:all

      - name: Generate Prisma client
        run: cd server && npx prisma generate

      - name: Run migrations
        run: cd server && npx prisma migrate deploy

      - name: Run linting and unit tests
        run: |
          npm run lint
          npm run test:unit
          npm run test:integration

      - name: Build
        run: npm run build

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
      - name: Deploy to production
        run: echo "Add deployment steps here" 